import pygame
import random

# Initialize pygame
pygame.init()

# Set up the screen
SCREEN_WIDTH, SCREEN_HEIGHT = 500, 600
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("Tetris")

# Set up the game variables
BLOCK_SIZE = 30
BOARD_WIDTH, BOARD_HEIGHT = 10, 20
board = [[0] * BOARD_WIDTH for _ in range(BOARD_HEIGHT)]
shapes = [
    [[[1, 1, 1], [0, 1, 0]], [255, 0, 0]],   # I-shape
    [[[1, 1, 0], [0, 1, 1]], [0, 255, 0]],   # S-shape
    [[[0, 1, 1], [1, 1, 0]], [0, 0, 255]],   # Z-shape
    [[[1, 1], [1, 1]], [255, 255, 0]],       # O-shape
    [[[1, 1, 1], [1, 0, 0]], [255, 0, 255]], # L-shape
    [[[1, 1, 1], [0, 0, 1]], [0, 255, 255]], # J-shape
    [[[0, 1, 0], [1, 1, 1]], [255, 128, 0]]  # T-shape
]
score = 0
level = 1

# Define the functions
def draw_block(x, y, color):
    """Draw a block on the board."""
    pygame.draw.rect(screen, color, (x * BLOCK_SIZE, y * BLOCK_SIZE, BLOCK_SIZE, BLOCK_SIZE))

def draw_board():
    """Draw the entire board."""
    for y, row in enumerate(board):
        for x, block in enumerate(row):
            if block:
                draw_block(x, y, block)

def new_block():
    """Create a new block."""
    shape = random.choice(shapes)
    block = shape[0]
    color = shape[1]
    x = BOARD_WIDTH // 2 - len(block[0]) // 2
    y = 0
    return block, color, x, y

def draw_block_on_board(block, color, x, y):
    """Draw a block on the board."""
    for row, row_data in enumerate(block):
        for col, block_data in enumerate(row_data):
            if block_data:
                draw_block(x + col, y + row, color)

def remove_completed_lines():
    """Remove completed lines and increase the score."""
    global score
    num_completed_lines = 0
    for y, row in enumerate(board):
        if 0 not in row:
            board.pop(y)
            board.insert(0, [0] * BOARD_WIDTH)
            num_completed_lines += 1
    if num_completed_lines:
        score += 10 * num_completed_lines
        if score >= level * 100:
            level += 1

def game_over():
    """Check if the game is over."""
    for block in current_block:
        x, y = block
        if board[y][x]:
            return True
    return False

# Create the initial block
current_block, current_color, current_x, current_y = new_block()

# Start the game loop
clock = pygame.time.Clock()
